{"version":3,"sources":["components/buttons/AddButton.js","components/buttons/UpdateButton.js","components/buttons/DeleteButton.js","baseUrl.js","components/InputTimes.js","actions/addTimes.js","actions/updateTimes.js","actions/deleteTimes.js","components/TimeTotal.js","components/LogoutInput.js","actions/login.js","containers/CalendarContainer.js","components/buttons/LoginButton.js","components/Header.js","components/LoginForm.js","containers/LoginFormContainer.js","App.js","reducers/manageTime.js","index.js"],"names":["AddButton","props","onClick","addTimes","UpdateButton","updateTimes","DeleteButton","deleteTimes","BASEURL","InputTimes","state","clockIn","clockOut","capturedDate","day","findDay","user","foundDayTime","user_times","find","ut","parseInt","date_of_times","clock_in","slice","fillInTimes","console","log","setState","prevState","clock_out","this","prevProps","event","target","name","value","preventDefault","addTime","id","deleteTime","updateTime","className","type","placeholder","onChange","handleOnChange","handleOnAdd","handleOnUpdate","handleOnDelete","Component","connect","userID","captured_date","dispatch","fetch","method","headers","body","JSON","stringify","user_id","then","res","json","userObj","err_message","alert","payload","updated_clock_in","updated_clock_out","updated_timeObj","deleted_clock_in","deleted_clock_out","convertTime","timeSeconds","minutes","hours","Math","floor","data","totalMonthTime","reduce","total","stamp","start","end","split","startTime","Date","endTime","abs","getTime","timeDifferenceInADay","calcTime","logoutUser","history","push","localStorage","clear","withRouter","CalendarContainer","inputs","i","key","Fragment","renderInputs","LoginButton","Header","LoginForm","handleSubmit","fetchUser","onSubmit","nameObjFromState","resp","setItem","LoginFormContainer","App","getItem","checkForUser","exact","path","component","catch","err","initialState","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d3e42ac.chunk.js","sourcesContent":["import React from 'react'\n\nconst AddButton = props => <button onClick={props.addTimes}>ADD</button>\n//onClick={() => props.add(...)}\n\n\nexport default AddButton\n\n","import React from 'react'\n\nconst UpdateButton = props => <button onClick={props.updateTimes}>UPDATE</button>\n// onClick={() => /*props.update(...)*/}\nexport default UpdateButton\n","import React from 'react'\n\nconst DeleteButton = props => <button onClick={props.deleteTimes}>DELETE</button>\n// onClick={() => props.delete(...)}\nexport default DeleteButton\n","const BASEURL = 'http://localhost:3000'\n//const USER_URL = \"http://localhost:3000/users\";\n\nexport default BASEURL\n","import React, {Component} from 'react'\nimport AddButton from './buttons/AddButton'\nimport UpdateButton from './buttons/UpdateButton'\nimport DeleteButton from './buttons/DeleteButton'\nimport { connect } from 'react-redux'\nimport {addTime} from '../actions/addTimes'\nimport {deleteTime} from '../actions/deleteTimes'\nimport {updateTime} from '../actions/updateTimes'\n\nclass InputTimes extends Component{\n\n    state = {\n        clockIn: '',\n        clockOut: '',\n        capturedDate: this.props.day\n    }\n\n    componentDidMount(){\n        \n        this.fillInTimes()\n            //handling for the case when a user logs in, and then is directed to the calendar \n            //AND handling for when a user is already \"logged in\" but it's gonna take a sec for the fetch req to put user in the store\n    }\n\n    componentDidUpdate(prevProps){\n\n        if (prevProps.user !== this.props.user){\n            \n            //because you're always changing your entire user object when you change your times, the deep equals of the prev user onbj\n            //and the new user obj are going to be different \n            //so this is saying if the user obj has changed, then re-fill in this user \n            //if the user object hasn't changed, then that means only local state has changed, and we want to preserve that new value\n            this.fillInTimes()\n\n        }\n    }\n    //handling for the case when a user is already logged in based on checkForUser in localStorage etc, and they go to calendar right away \n\n    findDay = () => {\n        if (this.props.user){\n           //. debugger\n            let foundDayTime = this.props.user.user_times.find(ut => parseInt(ut.date_of_times) === this.state.capturedDate)  //compare day from props to day from state\n        //  debugger\n            //checking to see if the user object in props has a user_time that matches this component's day \n            if (foundDayTime && foundDayTime.clock_in.slice(11, 16) !== this.state.clockIn) {\n                return foundDayTime\n            }\n        }\n    }\n\n    fillInTimes = () => {\n      let foundDayTime = this.findDay()\n      //if the loggedInuser has a user_time for this day, fill it in. \n      if (foundDayTime){\n          console.log(foundDayTime)\n        this.setState(prevState => {\n            return {\n                ...prevState, \n                clockIn: foundDayTime.clock_in.slice(11, 16),\n                clockOut: foundDayTime.clock_out.slice(11, 16)\n             }\n        \n              })\n        }\n    }\n    \n\n    handleOnChange(event){\n        this.setState({ \n            [event.target.name]: event.target.value,\n        }, () => console.log(this.state))\n    }\n\n    handleOnAdd(event){\n        event.preventDefault()\n        this.props.addTime(this.props.user.id, this.state.clockIn, this.state.clockOut, this.state.capturedDate)\n    }\n\n    handleOnDelete(event){\n        event.preventDefault()\n        this.props.deleteTime(this.props.user.id, this.state.capturedDate, this.state.clockIn, this.state.clockOut)\n        this.setState({ \n            clockIn: '',\n            clockOut: ''\n        })\n    }\n\n    handleOnUpdate(event){\n        event.preventDefault()\n        this.props.updateTime(this.props.user.id, this.state.capturedDate, this.state.clockIn, this.state.clockOut)        \n    }\n\n    // findIfTimeExistByDay(){\n    //     if (this.props.user){\n            \n            \n    //     return this.props.user.usertimes.find(day => day.date_of_times === this.props.day)\n            \n    //     }\n    // }\n\n    render(){\n     \n        return(\n           \n            <div className=\"item\">\n              \n                <form>\n                    <span>{this.props.day}</span>\n                    <label>Clock In</label>\n                    <input type=\"time\" value={this.state.clockIn} name=\"clockIn\" placeholder=\"Clock In\" className=\"clockIn\" onChange={(event) => this.handleOnChange(event)} />\n                    <label>Clock Out</label>\n                    <input type=\"time\" value={this.state.clockOut} name=\"clockOut\" placeholder=\"Clock Out\" className=\"clockOut\" onChange={(event) => this.handleOnChange(event)} />\n\n                    <div className=\"btnActions\">                      \n                        <AddButton addTimes={(event) => this.handleOnAdd(event)} /> \n                        <UpdateButton updateTimes={(event) => this.handleOnUpdate(event)}/>\n                        <DeleteButton deleteTimes={(event) => this.handleOnDelete(event)}/>                                    \n                    </div>\n                </form>\n           </div>\n        )\n    }   \n}\n\nconst mapStateToProps = (state) =>  {\n       return {\n           user: state.user\n        }\n    }\n\nexport default connect(mapStateToProps, {addTime, updateTime, deleteTime})(InputTimes)","import BASEURL from \"../baseUrl\"\n\nexport const addTime = (userID, clock_in, clock_out, captured_date) => {\n    return dispatch => {\n        fetch(`${BASEURL}/user_times`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"           \n            },\n            body: JSON.stringify(\n                {clock_in: clock_in, \n                clock_out: clock_out, \n                date_of_times: captured_date, \n                user_id: userID\n            })\n        })\n        .then((res) => {\n            console.log(res)\n            return res.json();\n        })\n        .then((userObj) => {\n            console.log(userObj)\n            if (userObj.err_message){\n                alert(userObj.err_message)\n            } else {\n                alert(\"Timestamp is now added.\");\n                return dispatch({type: 'ADD_TIME', payload: userObj}) \n        }\n        })\n    }\n}","import BASEURL from \"../baseUrl\"\n\nexport const updateTime = (userID, captured_date, updated_clock_in, updated_clock_out) => {\n    return dispatch => {\n        fetch(`${BASEURL}/user_times/${captured_date}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"           \n            },\n            body: JSON.stringify({user_id: userID, clock_in: updated_clock_in, clock_out: updated_clock_out, date_of_times: captured_date})\n        })\n            .then((res) => {\n                return res.json();\n            })\n            .then((updated_timeObj) => {\n                alert(\"Timestamp has been updated.\");\n                return dispatch({type: 'UPDATE_TIME', payload: updated_timeObj})\n        })\n    }\n}","import BASEURL from \"../baseUrl\"\n\nexport const deleteTime = (userID, captured_date, deleted_clock_in, deleted_clock_out) => {\n    return dispatch => {\n        fetch(`${BASEURL}/user_times/${captured_date}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({user_id: userID, clock_in: deleted_clock_in, clock_out: deleted_clock_out, date_of_times: captured_date})\n        })\n            .then((res) => {\n                return res.json();\n            })\n            .then((userObj) => {\n                    alert(\"Timestamp has been deleted.\");\n                    return dispatch({type: 'DELETE_TIME', payload: userObj})\n            })\n        }\n}","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst TimeTotal = (props) => {\n\n    const timeDifferenceInADay = (start, end) => {\n\n        \n        start = start.split(\":\");\n        end = end.split(\":\");\n\n        end[0] = end[0] === \"00\" ? \"24\" : end[0]\n        if(end[0] < start[0]){\n            alert(\"Clock In time must be before the clock out time.\")\n            return 0\n        }\n        let startTime = new Date(0, 0, 0, start[0], start[1], 0);\n        let endTime = new Date(0, 0, 0, end[0], end[1], 0);\n        //console.log(Math.abs(startTime.getTime() - endTime.getTime()))\n        return Math.abs(startTime.getTime() - endTime.getTime()); //seconds\n    }\n    \n    const calcTime = (data) => {\n        console.log(data)\n        let totalMonthTime = data.user_times.reduce((total, stamp) => {\n            //debugger\n            console.log(stamp.clock_out.slice(11, 16))\n            return total + (timeDifferenceInADay(stamp.clock_in.slice(11, 16), stamp.clock_out.slice(11, 16)))\n        }, 0)\n        return convertTime(totalMonthTime);\n    }\n    \n    const convertTime = (timeSeconds) => {\n        let seconds, minutes, twelveHours, hours = 0\n        seconds = (timeSeconds / 1000) % 60\n        minutes = (timeSeconds / (1000*60) % 60)\n        hours = Math.floor((timeSeconds / (1000*60*60)) % 24)\n     //twelveHours = Math.floor((timeSeconds / (1000*60*60)) % 12);\n       return `${hours} HOURS, ${minutes} MINUTES`;\n     \n    }\n    return (\n        <header>\n            <h3>Calculate time in a month\n                   total: <span id=\"currentTime\">{props.user && calcTime(props.user) }</span>\n            </h3>\n        </header>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(TimeTotal)","import React from 'react'\nimport { withRouter } from \"react-router-dom\"\nimport { connect } from 'react-redux'\nimport {logoutUser } from '../actions/login'\n\nconst LogoutInput = (props) => {\n    return (\n        <div id=\"welcomeUser\">\n            {/* the && is like  aternary operator but just for two things. If the first is true, then do the second. Otherwise do nothing*/}\n            <p>Welcome, {props.user && props.user.name}</p>\n            <button onClick={() => props.logoutUser(props.history)}>logout</button>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user\n    }\n} \n\nexport default connect(mapStateToProps, {logoutUser})(withRouter(LogoutInput))","import BASEURL from \"../baseUrl\"\n\nexport const fetchUser = (nameObjFromState, history) => {\n    //thunk allows us to return functions instead of plain objects\n    //put async logic inside our action creators\n    //allow us to call dispatch inside our actionCreators by automatically passing dispatch to the returned function \n    //the main benefit of thunk is so that our async logic that will ultimately change redux store's state is in our actionCreator files\n    //rather than taking up space in the components where the results won't effect local state at all \n    //in other words, async logic that changes local state is fine/belongs in components themselves \n    //async logic that changes redux store's state should go in the action creators\n    //it's just separation of responsibility that thunk helps make possible \n\n    //to be async is to deal with promises. IE fetch requests \n    //console.log(nameObjFromState)\n    return dispatch => {\n        fetch(BASEURL+'/users', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(nameObjFromState)\n        })\n        .then(resp => resp.json())\n\n        .then(userObj => {\n            dispatch({type: 'FETCH_USER', payload: userObj})\n            localStorage.setItem('loggedInUserID', userObj.id)\n            history.push('/calendar')\n        })\n    }\n    \n}\n\nexport const checkForUser = (userID, history) => {\n    console.log(\"CHECKING FOR USER\")\n    return dispatch => {\n        fetch(`${BASEURL}/users/${userID}`)\n        .then(res => {\n            return res.json();\n        })\n        .then(userObj => {\n            history.push('/calendar')\n            console.log(history)\n            return dispatch({type: 'CHECK_LOGGED_USER', payload: userObj})\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n}\n\nexport const logoutUser = (history) => {\n    history.push('/')\n    localStorage.clear();\n    return dispatch => {\n        return dispatch({type: \"LOGOUT_USER\"})\n    }\n\n}\n\n\n","import React, {Component} from 'react'\nimport InputTimes from '../components/InputTimes'\nimport TimeTotal from '../components/TimeTotal'\nimport LogoutInput from '../components/LogoutInput'\nimport { connect } from 'react-redux'\n\n\nclass CalendarContainer extends Component{\n    \n    renderInputs(){\n        let inputs = []\n        for(let i = 1; i <= 31; i++ ){\n            inputs.push(<InputTimes day={i} key={i}/>)\n        }        \n        return inputs\n    }\n\n\n    render(){ \n \n        return(\n        <React.Fragment>\n            <LogoutInput/>\n            <div className=\"container\">\n                <TimeTotal/>\n                <div className=\"calendar\">\n                {this.renderInputs()}\n                </div>\n            </div>\n        </React.Fragment>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(CalendarContainer)\n","import React from 'react'\n\nconst LoginButton = props => <button>LOGIN</button>\n// onClick={() => /*props.login(...)*/}\nexport default LoginButton\n","import React from 'react'\n\nconst Header = () => {\n    return (\n        <header>\n            <h1>TimeKeeper Calculator</h1>\n        </header>\n    )\n}\n\nexport default Header","import React, {Component} from 'react'\nimport LoginButton from './buttons/LoginButton'\nimport Header from './Header'\nimport {fetchUser} from '../actions/login'\nimport { connect } from 'react-redux'\nimport { withRouter } from \"react-router-dom\"\n\n\nclass LoginForm extends Component{\n    state = {\n        name: ''\n    }\n\n    handleOnChange = (event) => {\n      \n        this.setState({\n            [event.target.name]: event.target.value\n        }) \n    }\n    \n    handleSubmit = (event) => {\n        event.preventDefault()\n        this.props.fetchUser({name: this.state.name}, this.props.history)\n    }\n\nrender(){\n    \n    return(\n        <div>\n            <Header />\n            <form onSubmit={this.handleSubmit}>\n                <div id=\"sign_up_in\">\n                <div id=\"sign_up\">\n                    <input type=\"text\" name=\"name\" id=\"sign_in_user\" placeholder=\"Log In\" onChange={this.handleOnChange} />\n                    <LoginButton id=\"submit_user\" />\n            \n                </div>\n                </div>\n            </form>\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user //user is the key from the reducer\n    //will be able to utilize this.props.user to display in the form\n})\nexport default connect(mapStateToProps, {fetchUser})(withRouter(LoginForm))\n//we need to pass our actionCreators through connect so that they're bound to Redux's dispatch , and when they execute they can talk to the store.\n//Our plain action creators that we wrote in a separate file do not talk to Redux on their own \n\n//const connect = (arg1, arg2) => {\n    //connect gets access to the Redux store state through a context API \n    //let state = this.context.state \n    //and then executes the first argument and passes that state to it \n    //arg1(state) << mapStateOProps\n    //connect also gets access to dispatch through a context API\n    //bind all actions in arg2 to dispatch << mapDispatchToProps\n    //the return value of connect \n    //is another function that accepts an argument of a coponent \n    //and it will add the selected info from the state we chose in mapstateoprops and the bound actionCreators to that component\n    //return function(component){\n        //component({propsfrommapStateToPropsmapDispatchToPropsgohere})\n    //}\n//}\n","import React, {Component} from 'react'\nimport LoginForm from '../components/LoginForm'\n\nclass LoginFormContainer extends Component{\n\n\n    render(){\n        return(\n            \n                <LoginForm />\n           \n        )\n    }\n}\n\n\nexport default LoginFormContainer\n","import React, {Component} from 'react'\nimport CalendarContainer from './containers/CalendarContainer'\nimport LoginFormContainer from './containers/LoginFormContainer'\nimport { Route } from 'react-router-dom';\nimport { withRouter } from \"react-router-dom\"\nimport {checkForUser} from './actions/login'\nimport { connect } from 'react-redux'\n\nimport './styles/App.css'\nimport './styles/flexbox.css'\n\n\nclass App extends Component {\n    componentDidMount(){\n \n        let userID = localStorage.getItem('loggedInUserID');\n     \n        if(userID){\n          this.props.checkForUser(userID, this.props.history)\n        }else{\n            return this.props.history.push('/')\n        }\n\n     }\n\n    render() {\n        return (\n        <div className=\"App\">\n            <Route exact path=\"/\" component={LoginFormContainer} />\n            <Route exact path=\"/calendar\" component={CalendarContainer} />\n                \n        </div>\n        )\n    }\n}\n\nexport default connect(null, {checkForUser})(withRouter(App))","let initialState = {\n    user: null\n}\n\nexport default function manageTime( state = initialState, action){\n    console.log(state, action)  //reducers updates the state sent from the actions\n    switch(action.type){\n        case \"ADD_TIME\":\n            console.log(state)\n            return {user: action.payload}\n        \n        case \"UPDATE_TIME\":\n            return {user: action.payload}\n\n        case \"DELETE_TIME\":\n            return {user: action.payload}\n        \n        case \"CHECK_LOGGED_USER\":\n           // console.log(state)\n           // console.log({...state, user: action.payload}) //{type: 'CHECK_LOGGED_USER', payload: {userObj, id: userID}}\n            return {user: action.payload}\n\n        case \"FETCH_USER\":\n            //console.log('user has been fetch!')\n           // console.log(state)\n            return {user: action.payload}  //makes a copy of state and modify the user value inside the copy. this comes from the login action returned by the fetch\n                                //{type: 'FETCH_USER', payload: user}\n\n       case \"LOGOUT_USER\":\n           return initialState\n\n        default:\n            return state\n    }\n\n    //reducer updates the store to be pulled as props in components\n} ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport manageTime from './reducers/manageTime'\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\n\n\n\nconst store = createStore(manageTime, applyMiddleware(thunk))\n\nReactDOM.render(\n    <Provider store={store}> \n        <Router> \n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}